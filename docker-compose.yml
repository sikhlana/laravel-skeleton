version: '3'

services:
  master:
    restart: always
    build:
      context: .
      dockerfile: Dockerfile-php
      args:
        - DEPLOY_ENV=${APP_ENV}
    image: sikhlana/skeleton-php
    volumes:
      - ./.env:/app/.env:ro
      - application-storage:/app/storage
    networks:
      - redis-network
    depends_on:
      - redis
    command: /bin/bash /app/run.sh
    tty: true

  nginx:
    restart: always
    build:
      context: .
      dockerfile: Dockerfile-nginx
      args:
        - BUILD_ENV=${APP_ENV}
    ports:
      - ${APP_PORT}:80
    networks:
      - fastcgi-network
    depends_on:
      - web
    command: nginx -g "daemon off;"
    tty: true

  web:
    restart: always
    image: sikhlana/skeleton-php
    volumes:
      - ./.env:/app/.env:ro
      - application-storage:/app/storage
    networks:
      - redis-network
      - fastcgi-network
    depends_on:
      - master
    expose:
      - 9000
    command: php-fpm --fpm-config /php-fpm.conf
    stop_signal: SIGKILL
    tty: true

  worker:
    restart: always
    image: sikhlana/skeleton-php
    volumes:
      - ./.env:/app/.env:ro
      - application-storage:/app/storage
    networks:
      - redis-network
    depends_on:
      - master
    command: php /app/artisan queue:work
    tty: true

  cron:
    restart: always
    image: sikhlana/skeleton-php
    volumes:
      - ./.env:/app/.env:ro
      - application-storage:/app/storage
    networks:
      - redis-network
    depends_on:
      - master
    command: php /app/artisan scheduler:work
    tty: true

  redis:
    restart: always
    image: redis:alpine
    volumes:
      - redis-db:/data
    networks:
      - redis-network
    command: redis-server --appendonly yes
    tty: true

volumes:
  redis-db:
    driver: local

  application-storage:
    driver: local

networks:
  redis-network:
    driver: bridge

  fastcgi-network:
    driver: bridge
