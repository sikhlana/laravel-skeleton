# Compile all the assets!
FROM node:lts-alpine AS assets

ARG BUILD_ENV

COPY . /app
WORKDIR /app

RUN npm install \
    && if [[ "$BUILD_ENV" = "production" ]]; \
        then npm run production; \
        else npm run development; \
    fi

FROM php:7.4-fpm-alpine

ARG BUILD_ENV

COPY --from=composer /usr/bin/composer /usr/bin
COPY --from=mlocati/php-extension-installer /usr/bin/install-php-extensions /usr/bin

RUN install-php-extensions bcmath bz2 exif imagick \
    mcrypt mysqli opcache pcntl pdo_mysql pdo_pgsql \
    redis soap sockets sysvmsg sysvsem sysvshm tidy uuid \
    xmlrpc xsl zip

RUN apk add bash --no-cache \
    && addgroup -g 101 app \
    && adduser -u 101 -D -G app app

COPY . /app
COPY --from=assets /app/public/mix-manifest.json /app/public/mix-manifest.json
RUN mkdir /app/storage \
    && chown app:app -R /app

USER app
WORKDIR /app

# Supercharge package downloads
RUN composer global require hirak/prestissimo --ansi --no-progress \
    && composer clear-cache

RUN if [[ "$BUILD_ENV" = "production" ]]; \
        then composer install --no-dev --classmap-authoritative --ansi --no-progress --no-scripts; \
        else composer install --ansi --no-progress --no-scripts; \
    fi \
    && composer clear-cache

COPY .docker/php/php-fpm.conf /php-fpm.conf
COPY .docker/php/run.sh /app/run.sh

VOLUME /app/storage
VOLUME /app/.env

STOPSIGNAL SIGTERM

ENTRYPOINT []
